version: build{build}

branches:
  only:
  - master
  - pre-release
  - dev

max_jobs: 1

# For Python versions available on Appveyor, see
# https://www.appveyor.com/docs/windows-images-software/#python
# https://www.appveyor.com/docs/linux-images-software#python
environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python36"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python36-x64"
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804

install:
  # We need wheel installed to build wheels
  - cmd: "%PYTHON%\\python.exe -m pip install microlib wheel pytest"
  - sh: "sudo apt update"
  - sh: "sudo apt -y install python3-pip"
  - sh: alias python="python3.6"
  - sh: "sudo -H pip3 install microlib wheel pytest coverage coveralls"
  - sh: "sudo locale-gen en_US.UTF-8 && sudo locale-gen fr_FR.UTF-8"
  - sh: "sudo python3 setup.py install"

build: off

test_script:
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python version you want to use on PATH.
  - cmd: "%PYTHON%\\python.exe setup.py test"
  - sh: "coverage run --source=mathmakerlib -m pytest -vv"

after_test:
  # This step builds your wheels.
  - cmd: "%PYTHON%\\python.exe setup.py bdist_wheel"
  - sh: "coveralls"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
