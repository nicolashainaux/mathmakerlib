version: build{build}

branches:
  only:
  - master
  - pre-release
  - dev

max_jobs: 1

# For Python versions available on Appveyor, see
# https://www.appveyor.com/docs/windows-images-software/#python
# https://www.appveyor.com/docs/linux-images-software#python
environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      PYTHON: "C:\\Python38-x64\\python.exe"
      APPVEYOR_BAKE_IMAGE: vs2019_mathmakerlib
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      APPVEYOR_BAKE_IMAGE: ubuntu2004_mathmakerlib

install:
  # We need wheel installed to build wheels
  - cmd: set PYTHONIOENCODING=utf-8
  - cmd: set PY_PYTHON=3.8
  - cmd: set PATH=C:\\Python38-x64\\;C:\\Python38-x64\\Scripts;%USERPROFILE%\\AppData\\Roaming\\Python\\Scripts;%PATH%
  - cmd: python --version
  - cmd: python -c "import sys; print(sys.platform); print(sys.version_info)"
  - cmd: python -m venv py38
  - sh: sudo apt -qq update
  - sh: sudo apt -y install python3-venv python3-pip curl python-is-python3
  - sh: mkdir -p $HOME/.local/bin
  - sh: export PATH="$HOME/.local/bin:$PATH"
  - sh: echo $PATH
  - sh: mkdir -p $HOME/.local/data/src
  - sh: cd $HOME/.local/data/src
  - sh: wget http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz
  - sh: tar xvzf install-tl-unx.tar.gz
  - sh: SOURCE_DIR=`ls | grep install | grep -v unx`
  - sh: cd $HOME
  - sh: curl https://gitlab.com/nicolas.hainaux/amoxtli/-/raw/master/src/olli/olli.sh > $HOME/.local/bin/olli.sh
  - sh: sudo chmod ugo+x $HOME/.local/bin/olli.sh
  - sh: sudo env "PATH=$PATH" olli.sh --source "$SOURCE_DIR" /home/appveyor/.local/data
  - sh: TL_BIN_DIR=`sudo cat /root/.tlbindir`
  - sh: export PATH="$TL_BIN_DIR:$PATH"
  - sh: echo $PATH
  - sh: lualatex --version
  - sh: luaotfload-tool --version

build_script:
  - cmd: .\py38\Scripts\activate.bat
  - cmd: curl -sSL https://install.python-poetry.org | %PYTHON%
  - cmd: poetry install
  - sh: curl -sSL https://install.python-poetry.org | python3 -
  - sh: sudo locale-gen en_US.UTF-8 && sudo locale-gen fr_FR.UTF-8
  - sh: echo $PATH
  - sh: poetry install


test_script:
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python version you want to use on PATH.
  - cmd: pytest
  - sh: poetry run coverage run --source=mathmakerlib -m pytest -vv

after_test:
  # This step builds your wheels.
  - cmd: poetry build
  - sh: poetry run coveralls

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
